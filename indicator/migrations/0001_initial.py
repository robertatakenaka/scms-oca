# Generated by Django 3.2.12 on 2022-10-28 13:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0004_alter_taggeditem_content_type_alter_taggeditem_tag'),
        ('usefulmodels', '0005_auto_20221028_1211'),
        ('location', '0003_alter_location_country'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('institution', '0004_institution_source'),
    ]

    operations = [
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Data da última atualização')),
                ('title', models.CharField(max_length=255, verbose_name='Título')),
                ('description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Descrição')),
                ('validity', models.CharField(blank=True, choices=[('', ''), ('CURRENT', 'CURRENT'), ('OUTDATED', 'OUTDATED')], max_length=255, null=True, verbose_name='Record validity')),
                ('seq', models.IntegerField(blank=True, null=True, verbose_name='Sequential number')),
                ('start_date_year', models.IntegerField(blank=True, null=True, verbose_name='Data de início')),
                ('end_date_year', models.IntegerField(blank=True, null=True, verbose_name='Data de fim')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Link')),
                ('raw_data', models.FileField(blank=True, null=True, upload_to='', verbose_name='CSV File')),
                ('computed', models.JSONField(blank=True, null=True, verbose_name='Arquivo JSON')),
                ('total', models.IntegerField(default=None, null=True, verbose_name='Observations number')),
                ('record_status', models.CharField(blank=True, choices=[('', ''), ('WIP', 'WORK IN PROGRESS'), ('TO MODERATE', 'TO MODERATE'), ('PUBLISHED', 'PUBLISHED')], max_length=255, null=True, verbose_name='Record status')),
                ('source', models.CharField(blank=True, max_length=255, null=True, verbose_name='Origem')),
                ('scope', models.CharField(choices=[('', ''), ('INSTITUTIONAL', 'Instituticional'), ('GEOGRAPHIC', 'Geográfico'), ('CHRONOLOGICAL', 'Cronológico'), ('THEMATIC', 'Temático')], max_length=20, null=True, verbose_name='Scope')),
                ('measurement', models.CharField(choices=[('', ''), ('FREQUENCY', 'Frequência'), ('EVOLUTION', 'Evolução'), ('AVERAGE', 'Média'), ('PERCENTUAL', 'Percentual')], max_length=25, null=True, verbose_name='Measurement')),
                ('code', models.CharField(max_length=555, verbose_name='Código')),
            ],
        ),
        migrations.CreateModel(
            name='ScientificProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('communication_object', models.CharField(blank=True, max_length=25, null=True, verbose_name='Communication object')),
                ('open_access_status', models.CharField(blank=True, max_length=50, null=True, verbose_name='Open Access Status')),
                ('use_license', models.CharField(blank=True, max_length=50, null=True, verbose_name='Use License')),
                ('apc', models.CharField(blank=True, max_length=20, null=True, verbose_name='Article Processing Charge')),
            ],
        ),
        migrations.AddIndex(
            model_name='scientificproduction',
            index=models.Index(fields=['communication_object'], name='indicator_s_communi_867a4b_idx'),
        ),
        migrations.AddIndex(
            model_name='scientificproduction',
            index=models.Index(fields=['open_access_status'], name='indicator_s_open_ac_2ec1d6_idx'),
        ),
        migrations.AddIndex(
            model_name='scientificproduction',
            index=models.Index(fields=['use_license'], name='indicator_s_use_lic_6e77e0_idx'),
        ),
        migrations.AddIndex(
            model_name='scientificproduction',
            index=models.Index(fields=['apc'], name='indicator_s_apc_aa703b_idx'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='action_and_practice',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='usefulmodels.actionandpractice'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='creator',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='indicator_creator', to=settings.AUTH_USER_MODEL, verbose_name='Criador'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='institutions',
            field=models.ManyToManyField(blank=True, to='institution.Institution', verbose_name='Instituição'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='keywords',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Palavra-chave'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='locations',
            field=models.ManyToManyField(blank=True, to='location.Location', verbose_name='Localização'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='posterior_record',
            field=models.ForeignKey(blank=True, max_length=255, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='successor_register', to='indicator.indicator', verbose_name='Posterior Record'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='previous_record',
            field=models.ForeignKey(blank=True, max_length=255, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='predecessor_register', to='indicator.indicator', verbose_name='Previous Record'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='scientific_production',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='indicator.scientificproduction'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='thematic_areas',
            field=models.ManyToManyField(blank=True, to='usefulmodels.ThematicArea', verbose_name='Área temática'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='updated_by',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='indicator_last_mod_user', to=settings.AUTH_USER_MODEL, verbose_name='Atualizador'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['action_and_practice'], name='indicator_i_action__f46b16_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['code'], name='indicator_i_code_ad3bf5_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['computed'], name='indicator_i_compute_fecea6_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['description'], name='indicator_i_descrip_361176_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['end_date_year'], name='indicator_i_end_dat_10d73e_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['link'], name='indicator_i_link_8fc8f3_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['measurement'], name='indicator_i_measure_66cef4_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['posterior_record'], name='indicator_i_posteri_48fe21_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['previous_record'], name='indicator_i_previou_4694ae_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['record_status'], name='indicator_i_record__612ab1_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['scientific_production'], name='indicator_i_scienti_e668fa_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['scope'], name='indicator_i_scope_7e501d_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['seq'], name='indicator_i_seq_c68a1b_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['source'], name='indicator_i_source_d3cea0_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['start_date_year'], name='indicator_i_start_d_4a915d_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['title'], name='indicator_i_title_96c026_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['total'], name='indicator_i_total_a2c4ad_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['validity'], name='indicator_i_validit_ea4c80_idx'),
        ),
    ]
